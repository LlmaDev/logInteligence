name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    outputs:
      tests_status: ${{ steps.run-tests.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        id: run-tests
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-venv python3-pip
          python3 -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          set +e
          pytest --junitxml=report.xml
          rc=$?
          set -e
          if [ $rc -eq 0 ]; then
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "result=failure" >> $GITHUB_OUTPUT
          fi
      - uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: report.xml

  build:
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.run-build.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - name: Build package
        id: run-build
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-venv python3-pip
          python3 -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install build
          set +e
          python -m build
          rc=$?
          set -e
          if [ $rc -eq 0 ]; then
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "result=failure" >> $GITHUB_OUTPUT
          fi
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: dist/*

  notify:
    runs-on: ubuntu-latest
    needs: [tests, build]
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y python3 python3-pip
      - name: Send notification email
        env:
          PIPELINE_EMAIL: ${{ secrets.PIPELINE_EMAIL }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          TESTS_STATUS: ${{ needs.tests.outputs.tests_status }}
          BUILD_STATUS: ${{ needs.build.outputs.build_status }}
        run: python3 notify.py
